import { useState } from "react";
import BasicList from "./BasicList";
import { ScryfallCard } from "./types";

function CardGroupByType({ cards }: { cards: ScryfallCard[] }) {
	const listOfCard = cards.map(card => <BasicList card={card.name} />)
	return (
		<>
			<Creatures cards={card} />
		</>
	)
}



function Creatures({ cards }: { cards: ScryfallCard[] }) {
	const [count, setCount] = useState<number>(0)

	const increment = () => {
		setCount(count + 1)
	}

	const checkForInstants = (cards: ScryfallCard[]) => {
		for (let i = cards.length - 1; i >= 0; i--) {
			if (cards.length == 0) {
				return
			}
			let card = cards.pop();
			if (card?.type_line.includes("Creature")) {
				increment()
				return (
					<div>
						<div>Creatures ({count})</div>
						<BasicList card={card.name} />
					</div>
				)

			}
		}


	}


}

function Enchantments({ cards }: { cards: ScryfallCard[] }) {
	const [count, setCount] = useState<number>(0)

	const increment = () => {
		setCount(count + 1)
	}

	const checkForEnchantments = (cards: ScryfallCard[]) => {
		for (let i = cards.length - 1; i >= 0; i--) {
			if (cards.length == 0) {
				return
			}
			let card = cards.pop();
			if (card?.type_line.includes("Enchantment")) {
				increment()
				return (
					<div>
						<div>Creatures ({count})</div>
						<BasicList card={card.name} />
					</div>
				)

			}
		}


	}

	return (
		<>
			{checkForEnchantments(cards)}
		</>
	)


}

function Creatures({ cards }: { cards: ScryfallCard[] }) {
	const [count, setCount] = useState<number>(0)

	const increment = () => {
		setCount(count + 1)
	}

	const checkForInstants = (cards: ScryfallCard[]) => {
		for (let i = cards.length - 1; i >= 0; i--) {
			if (cards.length == 0) {
				return
			}
			let card = cards.pop();
			if (card?.type_line.includes("Creature")) {
				increment()
				return (
					<div>
						<div>Creatures ({count})</div>
						<BasicList card={card.name} />
					</div>
				)

			}
		}


	}


}

function Creatures({ cards }: { cards: ScryfallCard[] }) {
	const [count, setCount] = useState<number>(0)

	const increment = () => {
		setCount(count + 1)
	}

	const checkForInstants = (cards: ScryfallCard[]) => {
		for (let i = cards.length - 1; i >= 0; i--) {
			if (cards.length == 0) {
				return
			}
			let card = cards.pop();
			if (card?.type_line.includes("Creature")) {
				increment()
				return (
					<div>
						<div>Creatures ({count})</div>
						<BasicList card={card.name} />
					</div>
				)

			}
		}


	}


}


export default CardGroupByType; 
